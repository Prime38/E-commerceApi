swagger: "2.0"
info:
  version: "0.0.1"
  title: Supplier api
# during dev, should point to your local machine
host: localhost:5000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /sendProduct/{productId}:
    x-swagger-router-controller: product
    put:
      operationId: update
      description: update a product amount after sending
      # define the parameters
      parameters:
        - name: productId
          description: Account number
          type: string
          in: path
          required: true
        - name: name
          description: Account properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/ProductQtyResponse"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    
  /products/{productId}:
    x-swagger-router-controller: product
    get:
      operationId: getOne
      description: get a product using productId
      # define the type of response for Success "200" and Error
      parameters:
        - name: productId
          type: string
          in: path
          required: true
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products :
    x-swagger-router-controller: product
    get:
      operationId : getAll
      description: get the accounts list
      # define the type of response for Success "200" and Error
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GetProductsListResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      operationId: save
      description: add a new product to the list
      # movie info to be stored
      parameters:
        - name: name
          description: product properties
          in: body
          required: true
          schema:
            $ref: "#/definitions/Product"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/GeneralResponse"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
        
  
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  GetProductsListResponse:
    required:
      - products
    properties:
      # The array of movies
      products:
        type: array
        items: 
          type: object
          properties:
            name:
              type: string
            productID:
              type: string
            price:
              type : number
            qty:
              type: number
            url:
              type: string
  GetProductResponse:
    required:
      - name
      - productId
      - qty
      - price
      - url
    properties:
      name:
        type: string
        description: task object name
      productId:
        type: string
        description: task description
      qty: 
        type : number
        description: task description
      price:
        type: number
      url:
        type: string
  ProductQtyResponse:
    type: object
    properties:
      name:
        type: string
        description: task object name
      productId:
        type: string
        description: task description
      qty: 
        type : number
        description: task description
      price:
        type: number
      url:
        type: string
    required:
      - productId
      - qty
  Product:
    type: object
    properties:
      name:
        type: string
        description: task object name
      productId:
        type: string
        description: task description
      qty: 
        type : number
        description: task description
      price:
        type: number
      url:
        type: string
    required:
      - name
      - qty
      - price
      - url
      
  GeneralResponse:
    type: object
    properties:
      success:
        type: number
        description: returns 1 if successful
      description:
        type: string
        description: a short comment 
    required:
      - success
      - description
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
